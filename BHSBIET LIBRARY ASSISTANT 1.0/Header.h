// Function Prototypes

    void getclass(int);                           //identify current class for memory
    void putclass(int);                          //identify current class for file saving
    void Boot2();
    void MessageIssued();
    void SaveLog(char str[]);
	void SaveLog(char name[], int bno);
    void SaveLog(int ,char []);
    void SaveLog(char[] , int, int );
    void SaveLog(int , char[], int );
    void SaveLog(char[],int ,int ,int );
	void SaveLog(char name[],int roll,int a,int b,int c);
 	void bootmenu();
	void ViewAllStudents();
	void ViewAllBooks(void *);
	void readfiles();
	void GiveABook();
	void ViewAStudent();
	void endmenu();
	void SubmitABook(); 
	void SortItOnRoll();
	void PrintToFile();
	void getsize();
	void ViewBookTakedStudents();
	void Search();
	void Analysis();
	void Printing();
	void Reading();	
	void SaveNow(void*);
	void readfiles();
	int getnoofbooks();
	void EraseStudent();
	void SearchWithThread_1(void *arg);
	void SearchWithThread2(void *arg);
	void SearchWithThread3(void *arg);
	void SearchWithThread4(void *arg);
	void SearchWithThread5(void *arg);
	void SearchWithThread6(void *arg);
	void SearchWithThread7(void *arg);
	void SearchWithThread8(void *arg);
	void SearchWithThread9(void *arg);
    void Init();
	void ShowImp(char msg[]);
	void DeleteBook();
	void SaveStudentData();
	BOOL Protection();
	void ReadLock();
	void SetLock();
	void ShowBigMessage(char string[]);
	void OpenBMaker(void*);
	void DeveloperMode();
	void SelectClass();
	void AdminMenu();
	void OpenBackup(void*);
	void ChangeToUpper(char []);
	int CheckBook(int no);
	BOOL CheckStudentRegisterNumber(int reg);
	void EditStudentData();
    int CheckStudent(int);
	void PrintCategory();
	void Category(int );
	void EditCategory();
	void CombineStudentFiles();